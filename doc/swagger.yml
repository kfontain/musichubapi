swagger: "2.0"
info:
  description: "Projet web M2 GL - Universit√© de Bordeaux - Michel Massamiri & Kenji Fontaine."
  version: "1.0.0"
  title: "MusicHub"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
tags: 
- name: "Authentification"
  description: "Social media authentification"
- name: "Playlists"
  description: "Operations about playlists"
- name: "Songs"
  description: "Operations about songs"
schemes:
- "https"

paths:
  /auth/google:
    post:
      tags:
      - "Authentification"
      summary: "One-click sign up with Google"
      description: "Logs in the user and generates a MusicHub token that can be used for all subsequent requests. Valid for 2 hours. If this is the first connection for the user, it will add the user to MusicHub's database using his Google credententials."
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization-google
        description: "Token ID from user's Google account."
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Succesful Operation"
          headers:
            generatedToken:
              schema:
                type: string
              description: "MusicHub's token for the user. Valid for 2 hours."
          schema:
            type: object
            properties:
              firstname:
                type: string
              lastname:
                type: string
              email: 
                type: string
              socialMediasToken:
                type: object
                properties:
                  google:
                    type: string
                  spotify:
                    type: string
                  deezer:
                    type: string
        500:
          description: "Internal Server Error"

  /playlists:
    post:
      tags:
      - "Playlists"
      summary: "Creates a new playlist with form data"
      description: "Creates a new playlist in MusicHub's database."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: body
        name: body
        description: "The title property is required."
        required: true
        schema:
          type: object
          properties:
            title:
              type: string
            genre:
              type: string
            link:
              type: string
            thumbnail:
              type: string
            description:
              type: string
            nbItems:
              type: number
      responses:
        200:
          description: "Succesful Operation"
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              genre:
                type: string
              link:
                type: string
              thumbnail:
                type: string
              description:
                type: string
              nbItems:
                type: number
              user_id:
                type: string
        401:
          description: "Unauthorized Access"
        500:
          description: "Internal Server Error"

    get:
      tags:
        - "Playlists"
      summary: "Finds all the playlists of the authenticated user"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      responses:
        200:
          description: "Succesful operation"
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
                genre:
                  type: string
                link:
                  type: string
                thumbnail:
                  type: string
                description:
                  type: string
                nbItems:
                  type: number
                user_id:
                  type: string
        401:
          description: "Unauthorized Access"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"

  /playlists/{id}:
    get:
      tags:
      - "Playlists"
      summary: "Finds the playlist of the authenticated user by ID"
      description:
      consumes:
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: path
        name: id
        description: "Playlist ID"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Succesful Operation"
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              genre:
                type: string
              link:
                type: string
              thumbnail:
                type: string
              description:
                type: string
              nbItems:
                type: number
              user_id:
                type: string
        500:
          description: "Internal Server Error"
        401:
          description: "Unauthorized Access"
        403:
          description: "Forbidden Access"
        404:
          description: "Not Found"


    put:
      tags:
      - "Playlists"
      summary: "Updates user's playlist by id with form data"
      description:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: path
        name: id
        description: "Playlist ID"
        required: true
        schema:
          type: string
      - in: body
        name: body
        required: true
        description: "Only title, description or/and genre can be updated."
        schema:
          type: object
          properties:
            title:
              type: string
            description:
              type: string
            genre:
              type: string
      responses:
        200:
          description: "Succesful Operation"
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              genre:
                type: string
              link:
                type: string
              thumbnail:
                type: string
              description:
                type: string
              nbItems:
                type: number
              user_id:
                type: string
        500:
          description: "Internal Server Error"
        401:
          description: "Unauthorized Access"
        403:
          description: "Forbidden Access"
        422:
          description: "Unprocessable Entity. Only title, description or/and genre can be updated."

    delete:
      tags:
      - "Playlists"
      summary: "Deletes the playlist of the authenticated user by ID"
      description:
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: path
        name: id
        description: "Playlist ID"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Succesful Operation : returns deleted playlist"
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              genre:
                type: string
              link:
                type: string
              thumbnail:
                type: string
              description:
                type: string
              nbItems:
                type: number
              user_id:
                type: string
        500:
          description: "Internal Server Error"
        401:
          description: "Unauthorized Access"
        403:
          description: "Forbidden Access"
        404:
          description: "Not Found"

  /playlists/import/youtube:
    post:
      tags:
      - "Playlists"
      summary: "Creates playlists in MusicHub's database using the Youtube API"
      description: "Creates playlists in database if they do not exist, otherwise update them."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: header
        required: true
        name: Authorization
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: body
        required: true
        name: body
        description: "Array of the Youtube API playlist ressource (the minimum schema of the body)."
        schema:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              snippet:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  thumbnails:
                    type: object
                    properties:
                      high:
                        type: object
                        properties:
                          url:
                            type: string
              contentDetails:
                type: object
                properties:
                  itemCount:
                    type: number
      responses:
        200:
          description: "Succesful Operation"
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
                genre:
                  type: string
                link:
                  type: string
                thumbnail:
                  type: string
                description:
                  type: string
                nbItems:
                  type: number
                user_id:
                  type: string
        401:
          description: "Unauthorized Access"
        500:
          description: "Internal Server Error"

  /playlists/thumbnails/upload:
    post:
      tags:
      - "Playlists"
      summary: "Upload an image to MusicHub"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: header
        required: true
        name: Authorization
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - name: "file"
        in: "formData"
        required: true
        type: "file"
      responses:
        200:
          description: "Succesful Operation"
          schema:
            type: string
        401:
          description: "Unauthorized Access"
        500:
          description: "Internal Server Error"
      

  /songs:
    post:
      tags:
      - "Songs"
      summary: "Creates a song with form data"
      description: "Name, link and playlist_id are required."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: body
        name: body
        required: true
        description: "name, link and playlist_id are required."
        type: object
        properties:
          name:
            type: string
          artist:
            type: string
          genre:
            type: string
          link:
            type: string
          playlist_id:
            type: string
      responses:
        401:
          description: "Unauthorized Access"
        403:
          description: "Forbidden Access"
        200:
          description: "Successful Operation"
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              artist:
                type: string
              genre:
                type: string
              link:
                type: string
              playlist_id:
                type: string
        500:
          description: "Internal Server Error"
    get:
      tags:
      - "Songs"
      summary: "Find all the songs from one or all playlists of the user"
      description: "If no query is specified, will return all the songs of all the playlists. If a playlist id is specified, will return all the songs from that playlist."
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: query
        name: playlistId
        description: "The playlist's ID from which the songs will be fetched."
        schema:
          type: string
      responses:
        401:
          description: "Unauthorized Access"
        403:
          description: "Forbidden Access"
        404:
          description: "No playlist was found"
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                artist:
                  type: string
                genre:
                  type: string
                link:
                  type: string
                playlist_id:
                  type: string
        500:
          description: "Internal server error"
    
  /songs/{id}:
    get:
      tags:
      - "Songs"
      summary: "Find song of the user by ID"
      description: "Return the user's song with the specified ID."
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: path
        name: id
        description: "Song ID"
        required: true
        schema:
          type: string
      responses:
        404:
          description: "Not Found"
        403:
          description: "Forbidden Access"
        401:
          description: "Unauthorized Access"
        200:
          description: "Successful Operation"
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              artist:
                type: string
              genre:
                type: string
              link:
                type: string
              playlist_id:
                type: string
        500:
          description: "Internal Server Error"

    put:
      tags:
      - "Songs"
      summary: "Updates user's song specified by the ID with form data"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: path
        name: id
        description: "Song ID"
        required: true
        schema:
          type: string
      - in: body
        name: body
        description: "form data : only name, artist and/or genre can be provided."
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
            artist:
              type: string
            genre:
              type: string
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              artist:
                type: string
              genre:
                type: string
              link:
                type: string
              playlist_id:
                type: string
        404:
          description: "Not Found"
        403:
          description: "Forbidden Access"
        422:
          description: "Unprocessable Entity, only name, artist and/or genre can be provided."
        500:
          description: "Internal Server Error"
        401:
          description: "Unauthorized Acess"
    delete:
      tags:
        - "Songs"
      summary: "Deletes song of the user by ID"
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        required: true
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: path
        name: id
        description: "Song ID"
        required: true
        schema:
          type: string
      responses:
        404:
          description: "Not Found"
        403:
          description: "Forbidden Access"
        401:
          description: "Unauthorized Access"
        200:
          description: "Successful Operation. Deleted song returned"
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              artist:
                type: string
              genre:
                type: string
              link:
                type: string
              playlist_id:
                type: string
        500:
          description: "Internal Server Error"

  /songs/import/youtube:
    post:
      tags:
        - "Songs"
      summary: "Creates songs in MusicHub's database using the Youtube API"
      description: "Creates songs in the database if they do not exist, otherwise update them. The body must have the exact data source from Youtube API in order to save the metadata from Youtube API."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: header
        required: true
        name: Authorization
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: query
        name: playlistId
        description: "The playlist's ID in which all the songs will be created."
        required: true
        schema:
          type: string
      - in: body
        required: true
        name: body
        description: "Array of the Youtube API video ressource (the minimum schema of the body)"
        schema:
          type: array
          items:
            type: object
            properties:
              snippet:
                type: object
                properties:
                  title:
                    type: string
                  playlistId:
                    type: string
              contentDetails:
                type: object
                properties:
                  videoId:
                    type: string
      responses:
        400:
          description: "Bad Request. Playlist's ID is required in the request parameters OR Request's body is undefined or request's body is not an array."
        200:
          description: "Successful Operation"
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                artist:
                  type: string
                genre:
                  type: string
                link:
                  type: string
                playlist_id:
                  type: string
        401:
          description: "Unauthorized Access"

        500:
          description: "Internal Server Error"
  /songs/import/api:
    post:
      tags:
      - "Songs"
      summary: "Creates songs in the API"
      description: "Creates songs in the API in order to mix different songs from different playlists into one playlist. The body must be an array of Songs."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: header
        required: true
        name: Authorization
        description: "Bearer + MusicHub's user's token." 
        schema:
          type: string
      - in: query
        name: playlistId
        description: "The playlist's ID in which the songs will be created."
        required: true
        schema:
          type: string
      - in: body
        required: true
        name: body
        description: "Array of Songs. The name and link properties are required for each object in the array."
        schema:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              artist:
                type: string
              genre:
                type: string
              link:
                type: string
      responses:
        400:
          description: "Bad Request. Playlist's ID is required in the request parameters OR Request's body is undefined or request's body is not an array."
        200:
          description: "Successful Operation"
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                artist:
                  type: string
                genre:
                  type: string
                link:
                  type: string
                playlist_id:
                  type: string
        401:
          description: "Unauthorized Access"

        500:
          description: "Internal Server Error"

definitions:
  User:
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
      email: 
        type: string
      socialMediasToken:
        type: object
        properties:
          google:
            type: string
          spotify:
            type: string
          deezer:
            type: string
  Playlist:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      genre:
        type: string
      link:
        type: string
      thumbnail:
        type: string
      description:
        type: string
      nbItems:
        type: number
      user_id:
        type: string
  Song:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      artist:
        type: string
      genre:
        type: string
      link:
        type: string
      playlist_id:
        type: string
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
